// Mocks generated by Mockito 5.4.2 from annotations
// in simple_flutter/test/data/repository_impl/movie_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:simple_flutter/core/model/range.dart' as _i2;
import 'package:simple_flutter/core/utils/range_utils.dart' as _i6;
import 'package:simple_flutter/data/data_source/remote_data_source.dart' as _i3;
import 'package:simple_flutter/data/model/movie_data.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRange_0 extends _i1.SmartFake implements _i2.Range {
  _FakeRange_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i3.RemoteDataSource {
  @override
  _i4.Future<List<_i5.PageData>> fetchPages(
          {required List<int>? pageOrdinals}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPages,
          [],
          {#pageOrdinals: pageOrdinals},
        ),
        returnValue: _i4.Future<List<_i5.PageData>>.value(<_i5.PageData>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.PageData>>.value(<_i5.PageData>[]),
      ) as _i4.Future<List<_i5.PageData>>);
}

/// A class which mocks [RangeUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockRangeUtils extends _i1.Mock implements _i6.RangeUtils {
  @override
  _i2.Range rangeDifference({
    required _i2.Range? range1,
    required _i2.Range? range2,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rangeDifference,
          [],
          {
            #range1: range1,
            #range2: range2,
          },
        ),
        returnValue: _FakeRange_0(
          this,
          Invocation.method(
            #rangeDifference,
            [],
            {
              #range1: range1,
              #range2: range2,
            },
          ),
        ),
        returnValueForMissingStub: _FakeRange_0(
          this,
          Invocation.method(
            #rangeDifference,
            [],
            {
              #range1: range1,
              #range2: range2,
            },
          ),
        ),
      ) as _i2.Range);
  @override
  List<int> pageOrdinals({required _i2.Range? range}) => (super.noSuchMethod(
        Invocation.method(
          #pageOrdinals,
          [],
          {#range: range},
        ),
        returnValue: <int>[],
        returnValueForMissingStub: <int>[],
      ) as List<int>);
}
